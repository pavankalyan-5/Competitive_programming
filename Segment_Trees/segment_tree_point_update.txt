#include<iostream>
#include<bits/stdc++.h>
using namespace std;

int a[100001];
vector<pair<int,int>>st(400004);
void build(int si,int ss,int se)
{
    if(ss==se)
    {
        if(a[ss]%2==1)
            st[si]={1,0};
        else
            st[si]={0,1};
        return;
    }
    int mid=(ss+se)/2;
    build(2*si,ss,mid);
    build(2*si+1,mid+1,se);
    
    st[si].first=st[2*si].first+st[2*si+1].first;
    st[si].second=st[2*si].second+st[2*si+1].second;
}
void update(int si,int ss,int se,int x,int y)
{
   if(ss==se)
    {
        if(a[ss]%2==1)
            st[si]={0,1};
        else
            st[si]={1,0};
        a[ss]=y;
        return;
    }
    int mid=(ss+se)/2;
    if(x<=mid)
    update(2*si,ss,mid,x,y);
    else
    update(2*si+1,mid+1,se,x,y);
    st[si].first=st[2*si].first+st[2*si+1].first;
    st[si].second=st[2*si].second+st[2*si+1].second;
}
int get_even(int si,int ss,int se,int qs,int qe)
{
    if(ss>qe || se<qs) return 0;
    
    if(ss>=qs && qe>=se)
        return st[si].second;
    int mid=(ss+se)/2;
    
    return get_even(2*si,ss,mid,qs,qe)+get_even(2*si+1,mid+1,se,qs,qe);
}
int get_odd(int si,int ss,int se,int qs,int qe)
{
    if(ss>qe || se<qs) return 0;
    
    if(ss>=qs && qe>=se)
        return st[si].first;
    int mid=(ss+se)/2;
    
    return get_odd(2*si,ss,mid,qs,qe)+get_odd(2*si+1,mid+1,se,qs,qe);
}
int main()
{
    int n,x,q,val,y;
    
    cin>>n;
    
    for(int i=1;i<=n;i++) cin>>a[i];
    
    build(1,1,n);
    
    cin>>q;
    
    while(q--)
    {
       cin>>val;
       if(val==0)
       {
           cin>>x>>y;
           if(y%2==a[x]%2) continue;
           update(1,1,n,x,y);
       }
       else if(val==1)
       {
            cin>>x>>y;
           cout<<get_even(1,1,n,x,y)<<endl;
       }
       else
       {
           cin>>x>>y;
           cout<<get_odd(1,1,n,x,y)<<endl;
       }
    }
}